generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  email             String         @id
  fullName          String         @map("full_name")
  createdAt         DateTime?      @default(now()) @map("created_at")
  updatedAt         DateTime?      @updatedAt @map("updated_at")
  profilePictureURL String         @map("profile_picture_url")
  password          String
  posts             Post[]
  roles             UserToRole[]
  refreshTokens     RefreshToken[]

  @@map("users")
}

model Post {
  id                Int        @id @default(autoincrement())
  userEmail         String     @map("user_email")
  title             String
  content           String
  publishedAt       DateTime   @default(now()) @map("published_at")
  updatedAt         DateTime   @updatedAt @map("updated_at")
  profilePictureURL String     @map("profile_picture_url")
  author            User       @relation(fields: [userEmail], references: [email])
  categories        Category[]

  @@map("posts")
}

model Category {
  id            Int    @id @default(autoincrement())
  categoryLabel String @map("category_label")
  posts         Post[]

  @@map("categories")
}

model Role {
  roleName        String             @id @map("role_name")
  roleDescription String             @map("role_description")
  users           UserToRole[]
  permissions     RoleToPermission[]

  @@map("role")
}

model Permission {
  permissionName        String             @id @map("permission_name")
  permissionDescription String             @map("permission_description")
  roles                 RoleToPermission[]

  @@map("permission")
}

model UserToRole {
  userEmail String
  roleId    String @map("role_id")
  user      User   @relation(fields: [userEmail], references: [email])
  role      Role   @relation(fields: [roleId], references: [roleName])

  @@id([userEmail, roleId])
  @@map("user_to_role")
}

model RoleToPermission {
  roleId       String     @map("role_id")
  permissionId String     @map("permission_id")
  role         Role       @relation(fields: [roleId], references: [roleName])
  permission   Permission @relation(fields: [permissionId], references: [permissionName])

  @@id([roleId, permissionId])
  @@map("role_to_permission")
}

model RefreshToken {
  userEmail String
  token      String
  expiry    DateTime
  user      User     @relation(fields: [userEmail], references: [email])

  @@id([userEmail, token])
  @@map("refresh_token")
}
